@page "/clinic/patient"
@attribute [Authorize(Policy = Permissions.Patient.View)]

@using WarehouseManger.Application.Features.Patients.Queries.GetAllPaged;

<style>
    .mud-table-container {
        overflow: auto;
    }
</style>

<HeroTitle Title="Patients" Description="Manage Patients" />
@if (!_loaded)
{
    <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
}
else
{
    <MudTable Elevation="25" ServerData="@(new Func<TableState, Task<TableData<GetAllPagedPatientsResponse>>>(ServerReload))" Hover="true" Dense="@_dense" Bordered="@_bordered" Striped="@_striped" @ref="_table">
        <ToolBarContent>
            <div class="justify-center mud-text-align-center">
                @if (_canCreatePatients)
                {
                    <MudButton DisableElevation Variant="Variant.Filled" Color="Color.Primary" @onclick="@(() => InvokeModal(0))" StartIcon="@Icons.Material.Filled.Add" IconColor="Color.Surface">Create</MudButton>
                    <MudButton DisableElevation Variant="Variant.Filled" OnClick="@(() => OnSearch(""))" StartIcon="@Icons.Material.Filled.Refresh" IconColor="Color.Surface" Color="Color.Secondary">Reload</MudButton>
                    @if (_canExportPatients)
                    {
                        <MudButton DisableElevation Variant="Variant.Filled" OnClick="ExportToExcel" StartIcon="@Icons.Custom.FileFormats.FileExcel" IconColor="Color.Secondary" Color="Color.Surface" Style="margin-left: 5px;">Export</MudButton>
                    }
                }
                else
                {
                    <MudButton DisableElevation Variant="Variant.Filled" OnClick="@(() => OnSearch(""))" StartIcon="@Icons.Material.Filled.Refresh" IconColor="Color.Surface" Color="Color.Secondary">Reload</MudButton>
                    @if (_canExportPatients)
                    {
                        <MudButton DisableElevation Variant="Variant.Filled" OnClick="ExportToExcel" StartIcon="@Icons.Custom.FileFormats.FileExcel" IconColor="Color.Secondary" Color="Color.Surface" Style="margin-left: 5px;">Export</MudButton>
                    }
                }
            </div>
            <MudToolBarSpacer />
            @if (_canSearchPatients)
            {
                <MudTextField T="string" ValueChanged="@(s=>OnSearch(s))" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
            }
        </ToolBarContent>
        <HeaderContent>
            <MudTh><MudTableSortLabel T="GetAllPagedPatientsResponse" SortLabel="Id">Id</MudTableSortLabel></MudTh>
             <MudTh><MudTableSortLabel T="GetAllPagedPatientsResponse" SortLabel="OPDId">OPDId</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel T="GetAllPagedPatientsResponse" SortLabel="FirstName">FirstName</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel T="GetAllPagedPatientsResponse" SortLabel="LastName">LastName</MudTableSortLabel></MudTh>
            <MudTh Style="text-align:right">Actions</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Id"><a href=@($"clinic/PatientVisitDetails/{context.Id}") >@context.Id </a></MudTd>
             <MudTd DataLabel="OPDId"><MudHighlighter Text="@context.OPDId" HighlightedText="@_searchString" /></MudTd>
            <MudTd DataLabel="FirstName">
                <MudHighlighter Text="@context.FirstName" HighlightedText="@_searchString" />
            </MudTd>
            <MudTd DataLabel="LastName">
                <MudHighlighter Text="@context.LastName" HighlightedText="@_searchString" />
            </MudTd>
            
           
            <MudTd DataLabel="Actions" Style="text-align: right">
               <MudMenu Label="Actions" Variant="Variant.Filled" DisableElevation="true" EndIcon="@Icons.Filled.KeyboardArrowDown" IconColor="Color.Secondary" Direction="Direction.Left" OffsetX="true">
                   <MudMenuItem @onclick="@(() => navigateToPatientVisit(@context.Id))">Details</MudMenuItem>    
                   @if (_canEditPatients)
                            {
                            <MudMenuItem @onclick="@(() => InvokeModal(@context.Id))">Edit</MudMenuItem>
                            }
                        @if (_canDeletePatients)
                            {
                            <MudMenuItem @onclick="@(() => Delete(@context.Id))">Delete</MudMenuItem>
                            }
                            
                    </MudMenu>
                   
            </MudTd>
        </RowTemplate>
        <FooterContent>
            <MudSwitch @bind-Checked="@_dense" Color="Color.Secondary" Style="margin-left: 5px;">Dense</MudSwitch>
            <MudSwitch @bind-Checked="@_striped" Color="Color.Tertiary" Style="margin-left: 5px;">Striped</MudSwitch>
            <MudSwitch @bind-Checked="@_bordered" Color="Color.Warning" Style="margin-left: 5px;">Bordered</MudSwitch>
        </FooterContent>
        <PagerContent>
            <TablePager />
        </PagerContent>
    </MudTable>
}